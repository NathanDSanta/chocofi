/*
* Keymap configuration file
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    quick-tap-ms = <175>;
    hold-trigger-on-release;
    retro-tap;
};

/ {
    combos {
        compatible = "zmk,combos";

        toggleQwerty {
            bindings = <&tog 1>;
            key-positions = <0 13 8>;
            layers = <0 1>;
        };
    };

    behaviors {
        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <30 31 32 33 25 34 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <33 34 35 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
        };

        mouseUp: mouseUp {
            compatible = "zmk,behavior-mod-morph";
            label = "mouseUp";
            bindings = <&mmv MOVE_UP>, <&msc SCRL_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        mouseDown: mouseDown {
            compatible = "zmk,behavior-mod-morph";
            label = "MOUSEDOWN";
            bindings = <&mmv MOVE_DOWN>, <&msc SCRL_DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        mouseLeft: mouseLeft {
            compatible = "zmk,behavior-mod-morph";
            label = "MOUSELEFT";
            bindings = <&mmv MOVE_LEFT>, <&msc SCRL_LEFT>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        mouseRight: mouseRight {
            compatible = "zmk,behavior-mod-morph";
            label = "MOUSERIGHT";
            bindings = <&mmv MOVE_RIGHT>, <&msc SCRL_RIGHT>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        parenthesis: parenthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "PARENTHESIS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        brackets: brackets {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACKETS";
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        braces: braces {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACES";
            bindings = <&kp LEFT_BRACE>, <&kp RBRC>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp Q            &kp W            &kp F          &kp P         &kp G          &kp J        &kp L         &kp U               &kp Y             &kp SEMI
  &HML LEFT_ALT A  &HML LEFT_GUI R  &HML LSHIFT S  &HML LCTRL T  &kp D          &kp H        &HMR RCTRL N  &HMR RIGHT_SHIFT E  &HMR RIGHT_GUI I  &HMR RALT O
  &kp Z            &kp X            &kp C          &kp V         &kp B          &kp K        &kp M         &kp COMMA           &kp DOT           &kp FSLH
                                    &kp ESC        &lt 3 TAB     &lt 2 SPACE    &lt 4 ENTER  &kp BSPC      &kp DEL
            >;
        };

        qwerty {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp Q        &kp W        &kp E          &kp R         &kp T          &kp Y        &kp U         &kp I         &kp O        &kp P
  &HML LALT A  &HML LGUI S  &HML LSHIFT D  &HML LCTRL F  &kp G          &kp H        &HMR RCTRL J  &HMR RSHFT K  &HMR RGUI L  &HMR LALT SEMICOLON
  &kp Z        &kp X        &kp C          &kp V         &kp B          &kp N        &kp M         &kp COMMA     &kp DOT      &kp FSLH
                            &kp ESC        &lt 3 TAB     &lt 2 SPACE    &lt 4 ENTER  &kp BSPC      &kp DEL
            >;
        };

        numsym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp F1        &kp F2            &kp F3          &kp F4         &kp F5      &kp F6        &kp F7         &kp F8          &kp F9         &kp F10
  &HML LALT N1  &HML LEFT_GUI N2  &HML LSHIFT N3  &HMR LCTRL N4  &kp N5      &kp N6        &HMR RCTRL N7  &HMR RSHIFT N8  &HMR RGUI N9   &HMR LALT N0
  &kp F11       &kp GRAVE         &kp MINUS       &kp EQUAL      &kp PLUS    &kp MINUS     &kp SQT        &kp SEMICOLON   &kp BACKSLASH  &kp F12
                                  &none           &none          &none       &parenthesis  &brackets      &braces
            >;
        };

        settingsAndMouse {
            bindings = <
  &kp LC(Z)    &kp LC(X)       &kp LC(C)  &kp LC(V)        &kp LC(LS(Z))    &kp C_MUTE    &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC
  &kp LALT     &kp LEFT_GUI    &kp LCTRL  &kp LSHFT        &kp LC(Y)        &mouseLeft    &mouseDown    &mouseUp         &mouseRight           &bt BT_CLR
  &bootloader  &studio_unlock  &kp CAPS   &kp PRINTSCREEN  &out OUT_TOG     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3          &bt BT_SEL 4
                               &none      &none            &none            &mkp LCLK     &mkp MCLK     &mkp RCLK
            >;
        };

        nav {
            bindings = <
  &kp LC(LS(TAB))  &kp LC(TAB)   &kp LC(W)       &kp LC(T)  &kp LC(N)    &trans    &trans         &trans       &trans     &trans
  &kp LEFT_ALT     &kp LEFT_GUI  &kp LEFT_SHIFT  &kp LCTRL  &trans       &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans
  &trans           &trans        &trans          &trans     &trans       &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans
                                 &trans          &trans     &trans       &none     &none          &none
            >;
        };
    };
};
